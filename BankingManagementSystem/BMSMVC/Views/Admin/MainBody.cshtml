
@{
    ViewBag.Title = "MainBody";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Banking Portal</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(135deg, #9bbdf1, #98cbe0, #bfbdfb);
            margin: 0;
            /*            padding-top: 60px;*/
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .admin-container, .details-container {
            padding: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
        }

        button {
            background-color: #4c68af;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

            button:hover {
                background-color: #1e2156;
            }

        #accountDetails, #transactionDetails, #customerDetails, #loanDetails {
            display: none;
            margin-top: 20px;
        }

        .close-btn {
            float: right;
            background-color: red;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
        }

            .close-btn:hover {
                background-color: darkred;
            }

        #loading {
            text-align: center;
            padding: 20px;
            color: #192677;
            font-size: 1.5rem;
        }

        .action-buttons {
            display: none;
        }

        .form-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            align-items: center;
            justify-content: center;
        }

        .form-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            width: 300px;
            position: relative;
        }

        .form-content label {
            display: block;
            margin: 5px 0;
        }

        .form-content input {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .form-content button[type="submit"] {
            background-color: #4c68af;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .form-content button[type="submit"]:hover {
            background-color: #1e2156;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>


    <!-- Admin Section -->
    <div class="admin-container">
        <h1>Admin Dashboard</h1>

        <div>
            <h2>Customer Details</h2>
            <button class="view-button" onclick="fetchCustomerDetails()">View Customer Details</button>
        </div>
        <br />
        <div>
            <h2>Loan Applications</h2>
            <button class="view-button" onclick="fetchLoanApplications()">View Loan Applications</button>
        </div>
        <br />
        <div>
            <h2>Create New Account</h2>
            <button class="view-button" onclick="openForm()">Create Account</button>
        </div>

        <!-- Customer Details -->
        <div id="customerDetails" class="details-container">
            <button class="close-btn" onclick="closeCustomerDetails()">Close</button>
            <h2>Customer Details</h2>
            <table>
                <thead>
                    <tr>
                        <th>Customer Name</th>
                        <th>Phone Number</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic content will be loaded here via AJAX -->
                </tbody>
            </table>
        </div>

        <!-- Account Details Section -->
        <div id="accountDetails" class="details-container">
            <button class="close-btn" onclick="closeAccountDetails()">Close</button>
            <h2>Account Details</h2>
            <table>
                <thead>
                    <tr>
                        <th>Account Id</th>
                        <th>Account Type</th>
                        <th>Balance</th>
                        <th>Date Created</th>
                        <th>IsActive</th>
                        <th>Action</th>
                        <th>Action</th>

                    </tr>
                </thead>
                <tbody>
                    <!-- Dynamic account details will be inserted here -->
                </tbody>
            </table>
        </div>

        <!-- Transaction Details Section -->
        <div id="transactionDetails" class="details-container">
            <button class="close-btn" onclick="closeTransactionDetails()">Close</button>
            <h2>Credited Transactions</h2>
            <table id="creditedTransactions">
                <thead>
                    <tr>
                        <th>Transaction ID</th>
                        <th>Receiver Account ID</th>
                        <th>Received Amount</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Credited transactions will be dynamically loaded here -->
                </tbody>
            </table>

            <h2>Debited Transactions</h2>
            <table id="debitedTransactions">
                <thead>
                    <tr>
                        <th>Transaction ID</th>
                        <th>Amount</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Debited transactions will be dynamically loaded here -->
                </tbody>
            </table>
        </div>




        <!-- Loan Application Details -->
        <div id="loanDetails" class="details-container">
            <button class="close-btn" onclick="closeLoanDetails()">Close</button>
            <h2>Loan Application List</h2>
            <div id="loanButtons">
                <button id="showPendingLoans">Show Pending Loans</button>
                <button id="showApprovedLoans">Show Approved Loans</button>
                <button id="showRejectedLoans">Show Rejected Loans</button>
            </div>
            <table id="loanTable">
                <thead>
                    <tr>
                        <th>Loan ID</th>
                        <th>Customer ID</th>
                        <th>Loan Amount</th>
                        <th>Status</th>
                        <th>Application Date</th>
                        <th class="action-buttons">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Loan data will be populated here dynamically -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Create New Account Form Modal -->
    <div class="form-modal" id="createAccountForm" style="display:none">
        <div class="form-content">
            <button class="close-btn" onclick="closeForm()">X</button>
            <form id="createAccountFormData" onsubmit="submitForm(event)">
                <label for="username">Account ID <span class="required" style="color:red">*</span></label>
                <input type="text" id="username" placeholder="Enter your customerID" required>
                <br />
                <label for="CustomerId">Customer ID <span class="required" style="color:red">*</span></label>
                <input type="text" id="CustomerId" placeholder="Enter your customerID" required>
                <br />
                <label for="AccountType">Account Type <span class="required" style="color:red">*</span></label>
                <input type="text" id="AccountType" placeholder="Enter the account type" required>
                <br />
                <label for="Balance">Balance <span class="required" style="color:red">*</span></label>
                <input type="text" id="Balance" placeholder="Enter the balance" required>
                <br />
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>

    <script>
        function fetchCustomerDetails() {
            $('#customerDetails').hide(); // Ensure it's hidden while loading
            $('body').append('<div id="loading">Loading...</div>'); // Show loading indicator

            $.ajax({
                url: 'https://localhost:7000/api/Customer', // Replace with your API endpoint
                method: 'GET',
                success: function (response) {
                    $('#loading').remove(); // Remove loading indicator
                    const tableBody = $('#customerDetails tbody');
                    tableBody.empty();

                    response.forEach(customer => {
                        const row = `
                                        <tr>
                                            <td>${customer.firstName} ${customer.lastName}</td>
                                            <td>${customer.phoneNumber}</td>
                                            <td>${customer.email}</td>
                                            <td>
                                                <button onclick="fetchAccountDetails(${customer.customerId})">View Accounts</button>
                                            </td>
                                        </tr>`;
                        tableBody.append(row);
                    });

                    $('#customerDetails').show(); // Show the customer details
                },
                error: function () {
                    $('#loading').remove(); // Remove loading indicator
                    alert('Error fetching customer data.');
                }
            });
        }

        function fetchLoanApplications() {
            $('#loanDetails').hide(); // Ensure it's hidden while loading
            $('body').append('<div id="loading">Loading...</div>'); // Show loading indicator

            $.ajax({
                url: 'https://localhost:7000/api/Loan', // Replace with your API endpoint for loan applications
                method: 'GET',
                success: function (response) {
                    $('#loading').remove(); // Remove loading indicator
                    const tableBody = $('#loanTable tbody');
                    tableBody.empty();

                    response.forEach(loan => {
                        const row = `
                                        <tr>
                                            <td>${loan.loanId}</td>
                                            <td>${loan.customerId}</td>
                                            <td>${loan.loanAmount}</td>
                                            <td>${loan.status}</td>
                                            <td>${new Date(loan.applicationDate).toLocaleDateString()}</td>
                                            <td class="action-buttons">
                                                <button class="approve-btn" data-loan-id="${loan.loanId}">Approve</button>
                                                <button class="reject-btn" data-loan-id="${loan.loanId}">Reject</button>
                                            </td>
                                        </tr>`;
                        tableBody.append(row);
                    });

                    $('#loanDetails').show(); // Show loan application details
                },
                error: function () {
                    $('#loading').remove(); // Remove loading indicator
                    alert('Error fetching loan applications.');
                }
            });
        }

        function closeCustomerDetails() {
            $('#customerDetails').hide();
        }

        function closeLoanDetails() {
            $('#loanDetails').hide();
        }

        // Event listeners for loan type buttons
        $('#showPendingLoans').click(function () {
            loadLoans("Pending");
        });

        $('#showApprovedLoans').click(function () {
            loadLoans("Approved");
        });

        $('#showRejectedLoans').click(function () {
            loadLoans("Rejected");
        });

        // Function to load loans by status
        function loadLoans(status) {
            const apiUrl = "https://localhost:7000/api/Loan"; // Replace with your API base URL
            $.ajax({
                url: `${apiUrl}/${status}`,
                type: 'GET',
                success: function (data) {
                    $('#loanTable tbody').empty();
                    data.forEach(loan => {
                        $('#loanTable tbody').append(`
                                        <tr>
                                            <td>${loan.loanId}</td>
                                            <td>${loan.customerId}</td>
                                            <td>${loan.loanAmount}</td>
                                            <td>${loan.status}</td>
                                            <td>${new Date(loan.applicationDate).toLocaleDateString()}</td>
                                        </tr>
                                    `);
                    });
                },
                error: function () {
                    alert('Error fetching loan data.');
                }
            });
        }

        function fetchAccountDetails(customerId) {
            $.ajax({
                url: `https://localhost:7000/api/Customer/${customerId}/Accounts`,
                method: 'GET',
                success: function (response) {
                    const tableBody = $('#accountDetails tbody');
                    tableBody.empty();

                    response.forEach(account => {
                        const row = `
                                                        <tr>
                                                            <td>${account.accountId}</td>
                                                            <td>${account.accountType}</td>
                                                            <td>${account.balance}</td>
                                                            <td>${new Date(account.createdDate).toLocaleDateString()}</td>
                                                            <td>${account.isActive}</td>
                                                            <td>
                                                                <button onclick="updateIsActive(${account.accountId})">${account.isActive ? "Deactivate" : "Activate"}</button>
                                                            </td>
                                                            <td>
                                                                <button onclick="fetchTransactionDetails(${account.accountId})">View Transactions</button>
                                                            </td>
                                                        </tr>`;
                        tableBody.append(row);
                    });

                    $('#accountDetails').show();
                },
                error: function () {
                    alert('Error fetching account data.');
                }
            });
        }

        function fetchTransactionDetails(accountId) {
            $.ajax({
                url: `https://localhost:7000/api/Transaction/GetAccountTransactions`,
                method: 'GET',
                data: { accountId: accountId },
                success: function (response) {
                    const creditedTableBody = $('#creditedTransactions tbody');
                    const debitedTableBody = $('#debitedTransactions tbody');
                    creditedTableBody.empty();
                    debitedTableBody.empty();

                    response.receivers.forEach(receiver => {
                        const creditedRow = `
                                    <tr>
                                        <td>${receiver.receiverTransactionId}</td>
                                        <td>${receiver.receiverAccountId}</td>
                                        <td>${receiver.receivedAmount}</td>
                                    </tr>`;
                        creditedTableBody.append(creditedRow);
                    });

                    response.transactions.forEach(transaction => {
                        const debitedRow = `
                                    <tr>
                                        <td>${transaction.transactionId}</td>
                                        <td>${transaction.amount}</td>
                                        <td>${new Date(transaction.transactionDate).toLocaleDateString()}</td>
                                    </tr>`;
                        debitedTableBody.append(debitedRow);
                    });

                    $('#transactionDetails').show();
                },
                error: function () {
                    alert('Error fetching transaction data.');
                }
            });
        }

        function updateIsActive(accountId) {
            // Get the current button and its text to determine the current state
            const button = $(`#accountDetails tbody button[onclick='updateIsActive(${accountId})']`);
            const currentState = button.text() === "Deactivate"; // If Deactivate, IsActive = true

            // Prepare the data payload
            const payload = { accountId: accountId, isActive: !currentState };

            $.ajax({
                url: `https://localhost:7000/api/Account/${accountId}/ToggleActiveStatus`, // Update the API endpoint if necessary
                method: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(payload), // Convert payload to JSON string
                success: function () {
                    alert(`Account ${accountId} has been ${currentState ? "deactivated" : "activated"} successfully.`);

                    // Update the button text dynamically
                    button.text(currentState ? "Activate" : "Deactivate");

                    // Optionally update the 'IsActive' column in the table
                    const isActiveCell = button.closest('tr').find('td:nth-child(5)');
                    isActiveCell.text(!currentState);
                },
                error: function () {
                    alert(`Failed to ${currentState ? "deactivate" : "activate"} the account. Please try again.`);
                }
            });
        }

        function closeAccountDetails() {
            $('#accountDetails').hide();
        }

        function closeTransactionDetails() {
            $('#transactionDetails').hide();
        }

        function openForm() {
            document.getElementById("createAccountForm").style.display = "flex";  // Show the form
        }

        function closeForm() {
            document.getElementById("createAccountForm").style.display = "none";  // Hide the form
        }

        function submitForm(event) {
            event.preventDefault();  // Prevent the default form submission

            const formData = {
                AccountID: document.getElementById('username').value,
                CustomerId: document.getElementById('CustomerId').value,
                AccountType: document.getElementById('AccountType').value,
                Balance: document.getElementById('Balance').value
            };

            $.ajax({
                url: 'https://localhost:7000/api/Account',  // Your backend API endpoint here
                method: 'POST',
                data: JSON.stringify(formData),
                contentType: 'application/json',  // Ensure data is sent as JSON
                success: function (response) {
                    alert("Account created successfully!");
                    closeForm();  // Close the modal form
                },
                error: function (error) {
                    alert("Error creating account. Please try again.");
                }
            });
        }
    </script>

</body>
</html>

